// Generated by ReScript, PLEASE EDIT WITH CARE


function redNosedReports(reports) {
  var checkMonotonicStack = function (report, prev, stack) {
    var _isStrictlyMonotonic = true;
    var _prev = prev;
    var _index = 1;
    while(true) {
      var index = _index;
      var prev$1 = _prev;
      var isStrictlyMonotonic = _isStrictlyMonotonic;
      if (index === report.length || !isStrictlyMonotonic) {
        return isStrictlyMonotonic;
      }
      var r = report.at(index);
      var curr = r !== undefined ? r : -1;
      var diff = prev$1 - curr | 0;
      var tmp;
      tmp = stack === "Incr" ? diff < 0 && diff >= -3 : diff > 0 && diff <= 3;
      _index = index + 1 | 0;
      _prev = curr;
      _isStrictlyMonotonic = tmp;
      continue ;
    };
  };
  var _amount = 0;
  var _reportsIndex = 0;
  while(true) {
    var reportsIndex = _reportsIndex;
    var amount = _amount;
    if (reportsIndex === reports.length) {
      return amount;
    }
    var r = reports.at(reportsIndex);
    var report = r !== undefined ? r : [];
    var l = report.at(0);
    var firstLevel = l !== undefined ? l : -1;
    var l$1 = report.at(1);
    var secondLevel = l$1 !== undefined ? l$1 : -1;
    if (firstLevel > secondLevel) {
      _reportsIndex = reportsIndex + 1 | 0;
      _amount = checkMonotonicStack(report, firstLevel, "Decr") ? amount + 1 | 0 : amount;
      continue ;
    }
    _reportsIndex = reportsIndex + 1 | 0;
    _amount = checkMonotonicStack(report, firstLevel, "Incr") ? amount + 1 | 0 : amount;
    continue ;
  };
}

var r11 = [
  [
    7,
    6,
    4,
    2,
    1
  ],
  [
    1,
    2,
    7,
    8,
    9
  ],
  [
    9,
    7,
    6,
    2,
    1
  ],
  [
    1,
    3,
    2,
    4,
    5
  ],
  [
    8,
    6,
    4,
    4,
    1
  ],
  [
    1,
    3,
    6,
    7,
    9
  ]
];

var r1 = redNosedReports(r11);

console.log("r1: ", r1);

export {
  redNosedReports ,
  r11 ,
  r1 ,
}
/* r1 Not a pure module */
